1. Structure globale
Le JSON est organisÃ© en quatre catÃ©gories principales :

"spot" â†’ MarchÃ© au comptant (achat/vente immÃ©diat des cryptos).
"swap" â†’ Contrats perpÃ©tuels (peut Ãªtre "linear" ou "inverse", mais ici les valeurs sont null).
"future" â†’ Contrats Ã  terme (linear et inverse, aussi null).
"option" â†’ Options (Ã©galement null, donc non supportÃ© ici).
2. DÃ©tail du MarchÃ© Spot ("spot")
Le marchÃ© spot contient plusieurs fonctionnalitÃ©s clÃ©s :

2.1. Mode Sandbox ("sandbox")
"sandbox": false â†’ Indique que le mode test (sandbox) est dÃ©sactivÃ©.
2.2. CrÃ©ation d'un ordre ("createOrder")
Ce bloc dÃ©finit les options disponibles lors de la crÃ©ation d'un ordre.

ClÃ©	Description
"marginMode"	Permet de spÃ©cifier un mode de marge (True).
"triggerPrice"	Permet d'ajouter un prix de dÃ©clenchement (True).
"triggerPriceType"	DÃ©finit le type de prix de dÃ©clenchement (actuellement null).
"triggerDirection"	DÃ©termine si l'ordre est dÃ©clenchÃ© Ã  la hausse/baisse (False).
"stopLossPrice"	Permet de fixer un prix de stop-loss (True).
"takeProfitPrice"	Permet de fixer un prix de take-profit (True).
"attachedStopLossTakeProfit"	PossibilitÃ© d'attacher stop-loss et take-profit (null).
"timeInForce"	Modes de gestion de l'ordre (IOC, FOK, PO, GTD, GTC).
"hedged"	Indique si la couverture (hedging) est activÃ©e (False).
"trailing"	Indique si un stop suiveur (trailing stop) est possible (False).
"leverage"	Effet de levier disponible (False).
"marketBuyByCost"	Acheter par coÃ»t total et non par quantitÃ© (True).
"marketBuyRequiresPrice"	NÃ©cessite un prix pour un achat au marchÃ© (False).
"selfTradePrevention"	EmpÃªche les auto-transactions (True).
"iceberg"	Ordres iceberg possibles (True).
"stopLoss" / "takeProfit"	Champs null, ce qui signifie qu'ils ne sont pas dÃ©finis.
"symbolRequired"	Indique si un symbole est requis (True).
ğŸ“Œ Explication rapide : Ce bloc montre que l'API permet des ordres avancÃ©s avec des options comme le stop-loss, take-profit, auto-prÃ©vention des transactions, etc..

2.3. CrÃ©ation d'ordres multiples ("createOrders")
"max": 5 â†’ Max 5 ordres peuvent Ãªtre crÃ©Ã©s en une seule requÃªte.
"symbolRequired": true â†’ Un symbole (ex: BTC/USDT) est obligatoire.
2.4. RÃ©cupÃ©ration des transactions ("fetchMyTrades")
DÃ©finit les paramÃ¨tres pour rÃ©cupÃ©rer l'historique des transactions.

ClÃ©	Description
"marginMode"	Filtre les trades avec marge (True).
"limit"	Pas de limite dÃ©finie (null).
"daysBack"	Pas de restriction de jours en arriÃ¨re (null).
"untilDays"	Peut rÃ©cupÃ©rer les trades des 7 derniers jours.
"symbolRequired"	Oblige Ã  spÃ©cifier un symbole (True).
2.5. RÃ©cupÃ©ration des ordres ("fetchOrder")
"marginMode": false â†’ Ne supporte pas la rÃ©cupÃ©ration d'ordres en mode marge.
"trigger": true â†’ Permet de rÃ©cupÃ©rer les ordres dÃ©clenchÃ©s.
"trailing": false â†’ Pas de support pour les trailing stops.
"symbolRequired": true â†’ NÃ©cessite un symbole.
2.6. RÃ©cupÃ©ration des ordres ouverts ("fetchOpenOrders")
"marginMode": true â†’ Supporte les ordres ouverts en mode marge.
"limit": 500 â†’ Max 500 ordres ouverts peuvent Ãªtre rÃ©cupÃ©rÃ©s.
"trigger": true â†’ Peut rÃ©cupÃ©rer les ordres dÃ©clenchÃ©s.
"trailing": false â†’ Pas de trailing stop.
"symbolRequired": true â†’ Un symbole est requis.
2.7. RÃ©cupÃ©ration des ordres fermÃ©s ("fetchClosedOrders")
"marginMode": true â†’ Mode marge supportÃ©.
"limit": 500 â†’ Max 500 ordres fermÃ©s rÃ©cupÃ©rables.
"daysBack": null / "daysBackCanceled": null â†’ Pas de restriction sur les jours passÃ©s.
"untilDays": 7 â†’ Peut rÃ©cupÃ©rer jusqu'Ã  7 jours d'historique.
"trigger": true â†’ Peut rÃ©cupÃ©rer ordres dÃ©clenchÃ©s.
"trailing": false â†’ Pas de trailing stop.
"symbolRequired": true â†’ Un symbole est requis.
2.8. RÃ©cupÃ©ration des chandeliers OHLCV ("fetchOHLCV")
"limit": 1500 â†’ Peut rÃ©cupÃ©rer jusqu'Ã  1500 chandeliers.
"symbolRequired": true â†’ Oblige un symbole.
3. MarchÃ© Swap ("swap")
"linear": null â†’ Pas d'information sur les contrats perpÃ©tuels linÃ©aires.
"inverse": null â†’ Pas d'information sur les contrats inverses.
4. MarchÃ© Future ("future")
"linear": null â†’ Pas de support dÃ©fini pour les futures linÃ©aires.
"inverse": null â†’ Pas de support dÃ©fini pour les futures inverses.
5. Options ("option")
"option": null â†’ Le marchÃ© des options n'est pas supportÃ©.
ğŸ“Œ Conclusion
Ce JSON dÃ©crit les fonctionnalitÃ©s de l'API d'un exchange pour diffÃ©rents types de marchÃ©s :

Spot â†’ TrÃ¨s dÃ©taillÃ© (crÃ©ation d'ordres, rÃ©cupÃ©ration de trades/ordres...).
Swap & Futures â†’ Pas d'infos (null).
Options â†’ Non supportÃ© (null).
L'API semble bien optimisÃ©e pour le trading spot avec des options avancÃ©es comme les ordres iceberg, la prÃ©vention des auto-trades, et le stop-loss/take-profit.
